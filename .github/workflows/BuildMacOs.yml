name: Linux-CI

# Permite execução manual e push
on:
  push:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux-CI:
    strategy:
      matrix:
        glx_option: ['dri', 'xlib']
    runs-on: ubuntu-latest
    env:
      GALLIUM_DUMP_CPU: true
      MESON_EXEC: $HOME/.local/bin/meson

    steps:
      # 1️⃣ Checkout do código
      - name: Checkout
        uses: actions/checkout@v3

      # 2️⃣ Instalar dependências via apt
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bison \
            expat \
            gettext \
            libx11-dev \
            libxcb1-dev \
            libxdamage-dev \
            libxext-dev \
            ninja-build \
            pkg-config \
            python3.10 \
            python3-pip \
            libllvm-dev \
            llvm

      # 3️⃣ Instalar Mako e Meson via pip
      - name: Install Mako and Meson
        run: pip3 install --user mako meson

      # 4️⃣ Configuração do build
      - name: Configure
        run: |
          cat > native_config <<EOL
          [binaries]
          llvm-config = "$(which llvm-config)"
          EOL
          $MESON_EXEC . build --native-file=native_config \
            -Dbuild-tests=true \
            -Dgallium-drivers=swrast,zink \
            -Dglx=${{ matrix.glx_option }}

      # 5️⃣ Compilação
      - name: Build
        run: $MESON_EXEC compile -C build

      # 6️⃣ Testes
      - name: Test
        run: $MESON_EXEC test -C build --print-errorlogs

      # 7️⃣ Instalação local
      - name: Install
        run: $MESON_EXEC install -C build --destdir $PWD/install

      # 8️⃣ Upload de artefatos usando a v4
      - name: Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.glx_option }}-result
          path: |
            build/meson-logs/
            install/
          retention-days: 5
