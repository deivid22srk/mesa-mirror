From 6cd7a951f6a50d0f74c798035ac7ce201f2aa6f0 Mon Sep 17 00:00:00 2001
From: Valentine Burley <valentine.burley@collabora.com>
Date: Fri, 11 Apr 2025 16:51:03 +0200
Subject: Revert "Fix issues with GLX reset notification strategy"

This reverts commit 3e6b3fb43eb9682641d8c880429255569a4472c0.
---
 .../platform/lnx/X11/tcuLnxX11GlxPlatform.cpp | 23 ++++---------------
 1 file changed, 4 insertions(+), 19 deletions(-)

diff --git a/framework/platform/lnx/X11/tcuLnxX11GlxPlatform.cpp b/framework/platform/lnx/X11/tcuLnxX11GlxPlatform.cpp
index b21e6bcbd..e1d33823c 100644
--- a/framework/platform/lnx/X11/tcuLnxX11GlxPlatform.cpp
+++ b/framework/platform/lnx/X11/tcuLnxX11GlxPlatform.cpp
@@ -147,7 +147,6 @@ private:
     GlxDisplay &m_display;
     ::Visual *m_visual;
     const GLXFBConfig m_fbConfig;
-    glu::ResetNotificationStrategy resetStrategy;
 };
 
 class GlxDrawable
@@ -220,7 +219,6 @@ public:
     virtual const tcu::RenderTarget &getRenderTarget(void) const;
     virtual glw::GenericFuncType getProcAddress(const char *name) const;
     const GLXContext &getGLXContext(void) const;
-    const GlxVisual &getGLXVisual(void) const;
 
 private:
     GlxDisplay m_glxDisplay;
@@ -412,31 +410,23 @@ GLXContext GlxVisual::createContext(const GlxContextFactory &factory, const Cont
         }
     }
 
-    const GlxRenderContext *sharedGlxRenderContext = dynamic_cast<const GlxRenderContext *>(sharedContext);
-
-    /* If there is a shared context, use same reset notification strategy. */
-    glu::ResetNotificationStrategy usedResetNotificationStrategy =
-        sharedGlxRenderContext ? sharedGlxRenderContext->getGLXVisual().resetStrategy : resetNotificationStrategy;
-
-    if (usedResetNotificationStrategy != glu::RESET_NOTIFICATION_STRATEGY_NOT_SPECIFIED)
+    if (resetNotificationStrategy != glu::RESET_NOTIFICATION_STRATEGY_NOT_SPECIFIED)
     {
         checkGlxExtension(m_display, "GLX_ARB_create_context_robustness");
         attribs.push_back(GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB);
 
-        if (usedResetNotificationStrategy == glu::RESET_NOTIFICATION_STRATEGY_NO_RESET_NOTIFICATION)
+        if (resetNotificationStrategy == glu::RESET_NOTIFICATION_STRATEGY_NO_RESET_NOTIFICATION)
             attribs.push_back(GLX_NO_RESET_NOTIFICATION_ARB);
-        else if (usedResetNotificationStrategy == glu::RESET_NOTIFICATION_STRATEGY_LOSE_CONTEXT_ON_RESET)
+        else if (resetNotificationStrategy == glu::RESET_NOTIFICATION_STRATEGY_LOSE_CONTEXT_ON_RESET)
             attribs.push_back(GLX_LOSE_CONTEXT_ON_RESET_ARB);
         else
             TCU_THROW(InternalError, "Unknown reset notification strategy");
     }
 
-    // Reset notification strategy used with this visual.
-    resetStrategy = resetNotificationStrategy;
-
     // Terminate attrib list
     attribs.push_back(None);
 
+    const GlxRenderContext *sharedGlxRenderContext = dynamic_cast<const GlxRenderContext *>(sharedContext);
     const GLXContext &sharedGLXContext = sharedGlxRenderContext ? sharedGlxRenderContext->getGLXContext() : nullptr;
 
     return TCU_CHECK_GLX(
@@ -815,11 +805,6 @@ const GLXContext &GlxRenderContext::getGLXContext(void) const
     return m_GLXContext;
 }
 
-const GlxVisual &GlxRenderContext::getGLXVisual(void) const
-{
-    return m_glxVisual;
-}
-
 MovePtr<ContextFactory> createContextFactory(EventState &eventState)
 {
     return MovePtr<ContextFactory>(new GlxContextFactory(eventState));
-- 
2.45.2

